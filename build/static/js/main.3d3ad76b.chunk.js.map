{"version":3,"sources":["Components/Header/Header.js","Components/Login/Login.js","Components/Logout/Logout.js","Components/Purchase/Purchase.js","Components/ListStocks/ListStocks.js","Components/Trending/Trending.js","Components/StockHistory/StockHistory.js","Components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","selectedLang","event","console","log","target","value","props","i18n","changeLanguage","this","t","style","backgroundColor","color","src","alt","width","height","className","fontSize","margin","fontStyle","isLoggedIn","onClick","redirect","history","data-toggle","title","Component","withTranslation","withRouter","Login","state","emailId","emailIdError","password","passwordError","isValid","handleChange","bind","handleSubmit","e","setState","id","localStorage","setItem","preventDefault","validate","then","res","user","getData","response","status","data","validateUser","userId","window","location","replace","Promise","resolve","reject","axios","post","url","catch","err","errors","accountNoError","indexOf","length","htmlFor","type","name","onChange","placeholder","Logout","Purchase","initialState","stockList","unitPrice","stockExchange","quantity","totalPriceObtained","totalPrice","stockId","stockName","updatedPrice","allStocksList","quantityError","confirmed","handleCancel","onStockChange","handleConfirm","handleOrder","handleOrderCancel","get","stock","getItem","price","orderId","alert","push","parseInt","document","getElementById","reset","date","Date","RegExp","test","stockNameError","map","item","i","key","readOnly","ListStocks","scope","each","index","rating","Trending","crisilRating","urlCharan","top","right","left","bottom","dataKey","strokeDasharray","stackId","fill","StockHistory","orderedDate","Home","App","page","getuserData","path","component","exact","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d3ad76b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n//import INGlogo from '../Assets/Images/Logo.png'\nimport './Header.css'\nimport { Link, withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\n\n\nclass Header extends Component {\n    selectedLang = (event) => {\n        console.log(event.target.value);\n        const { i18n } = this.props;\n        i18n.changeLanguage(event.target.value);\n    }\n    render() {\n        console.log(this.props)\n        let { t } = this.props;\n        return (\n            <div>\n                <div style={{ backgroundColor: '#ff6200', color: '#fff' }}>\n                    <img src=\"https://static.puzzlefactory.pl/puzzle/189/950/original.jpg\" alt='not found' width=\"200px\" height=\"100px\" />\n                        <span className='' style={{ color: '#fff', fontSize: '30px', margin: '15%',fontStyle: 'italic' }}>  InstaTradE – Invest And Grow With US </span>\n                    {\n                        this.props.isLoggedIn ?\n                            <span ><button className=\"bt\" onClick={() => this.props.redirect('/logout', this.props.history)} data-toggle=\"tooltip\" title=\"Logout\" >Logout</button></span> :\n                            <span><button className=\"bt\" onClick={() => this.props.redirect('/login', this.props.history)} data-toggle=\"tooltip\" title=\"Login\" >Login</button></span>\n                    }\n\n                    {/* <span><Link to=\"/register\" data-toggle=\"tooltip\" title=\"Register\" className=\"link2\">Create Account</Link></span>\n                    \n                    <span><select className=\"drp\" onChange={this.selectedLang}>\n                        <option value=\"en\">English</option>\n                        <option value=\"sp\">Spanish</option>\n                    </select></span> */}\n                </div>\n\n            </div>  \n        )\n    }\n}\nexport default withTranslation()(withRouter(Header));\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { withTranslation } from 'react-i18next';\nimport './Login.css'\nimport url from '../../config.json'\nimport { withRouter } from 'react-router-dom';\nimport validate from '../../Utils/Validator'\n\nexport class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            emailId: '',\n            emailIdError: '',\n            password: '',\n            passwordError: '',\n            isValid: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    handleChange(e) {\n        this.setState({ [e.target.id]: e.target.value }, () => {\n            localStorage.setItem(\"data\",this.state.emailId)\n        });\n        \n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        this.validate().then((res) => {\n            console.log(\"res\", res)\n            if (res) {\n                const { emailId, password } = this.state\n                const user = {\n                    emailId: emailId,\n                    password: password\n                };\n         \n                this.getData(user).then((response) => {\n                    if (response.status === 200 && response.data.status === \"SUCCESS\") {\n                        this.props.validateUser(true);\n                        localStorage.setItem(\"userId\",response.data.userId)\n                        window.location.replace('http://localhost:3000/#/home')\n                        // this.props.history.push({\n                        //     pathname: '/admindashboard',\n                        //     search: '?query=dashboard',\n                        //     //state:{data: response.data}\n                        //     state: { data: response.data.roleId }\n                        // })\n                    }\n                })\n            }\n        });\n\n    }\n    getData(user) {\n        // let res={\n        //     status: 200,\n        //     data: {\n        //         status: \"SUCCESS\",\n        //         roleId: 3\n        //     }\n        // }\n        return new Promise((resolve, reject) => {\n            axios.post(`${url.url}/login`, user)\n                .then(res => {\n                    resolve(res)\n                }).catch(err => {\n                    reject(err)\n                })\n        });\n        \n    }\n    validate() {\n        console.log(\"Inside validate\")\n        let isValid = true;\n        const errors = {\n            accountNoError: '',\n            passwordError: ''\n        }\n\n        if (this.state.emailId.indexOf('@') !== -1) {\n            if (this.state.password.length > 4) {\n                isValid = true;\n            } else {\n                isValid = false;\n                errors.passwordError = 'Password should be more than 4 characters'\n            }\n        } else {\n            isValid = false;\n            errors.emailIdError = 'Email Id should be in proper format'\n        }\n        if(this.state.emailId===''|| this.state.password ===''){\n            isValid = false;\n            errors.emailIdError=\"Email is mandatory field\"\n            errors.passwordError=\"Password is mandatory field\"\n        }\n\n        this.setState({\n            ...this.state,\n            ...errors\n        })\n        console.log(\"isValid inside validate\", isValid)\n        return Promise.resolve(isValid);\n\n    }\n    render() {\n        let { t } = this.props;\n        return (\n            <div>\n                <header >\n                    <h2>Login </h2>\n                </header>\n                <form className=\"loginform\">\n                    <div className=\"form-group\">\n                        <span className=\"pull-right text-danger\"><small>{this.state.emailIdError}</small></span>\n                        <br></br>\n                        <label htmlFor=\"emailId\">Email Id  </label>\n                        <input\n                            type=\"text\"\n                            id=\"emailId\"\n                            name=\"emailId\"\n                            onChange={this.handleChange}\n                            value={this.state.emailId}\n                            className=\"form-control\"\n                            placeholder=\"Enter the email\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <span className=\"pull-right text-danger\"><small>{this.state.passwordError}</small></span>\n                        <br></br>\n                        <label htmlFor=\"password\">password </label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={this.handleChange}\n                            value={this.state.password}\n                            className=\"form-control\"\n                            placeholder=\"Enter the password\" />\n                    </div>\n                    <br></br><br></br>\n                    <button id=\"submit\" type=\"submit\" className=\"but\" onClick={this.handleSubmit}>Login</button>\n\n                </form>\n            </div>\n        )\n    }\n}\n\n// export default withRouter(withTranslation()(Login));\n\nexport default Login","import React, { Component } from 'react'\nimport './Logout.css'\nexport class Logout extends Component {\n    constructor(props){\n        super(props)\n    }\n    render() {\n        return (\n            <div>\n                <h3 style={{'margin-top': '10%'}}>Thank you for using breach reporting system.You have successfully loggedout</h3>\n            </div>\n        )\n    }\n}\n\nexport default Logout\n","import React, { Component } from 'react'\nimport './Purchase.css'\nimport axios from 'axios'\nimport url from '../../config.json'\nimport Axios from 'axios';\nimport SweetAlert from 'sweetalert-react';\nexport class Purchase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            initialState: {\n                stockList: [{\n                    name: 'Hero',\n                    unitPrice: '1100',\n                    stockExchange: 'NSE'\n                }],\n                quantity:'',\n                unitPrice:'',\n                totalPriceObtained: false,\n                totalPrice:'',\n                stockId: '',\n                stockName:'',\n                updatedPrice: ''\n\n            },\n            allStocksList: [],\n            quantity: '',\n            stockId: '',\n            stockName: '',\n            unitPrice: '100',\n            totalPrice: '',\n            totalPriceObtained: false,\n            quantityError: '',\n            confirmed: false,\n            updatedPrice:''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleCancel = this.handleCancel.bind(this);\n        this.onStockChange = this.onStockChange.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleOrder = this.handleOrder.bind(this);\n        this.handleOrderCancel = this.handleOrderCancel.bind(this);\n\n    }\n    handleChange(e) {\n        this.setState({ [e.target.id]: e.target.value }, () => {\n            // localStorage.setItem(\"data\",this.state.emailId)\n        });\n\n    }\n    componentDidMount() {\n        axios.get(`${url.url}/getAllStocks`)\n            .then(res => {\n                console.log(\"res inside component did mount get all stocks\", res)\n                if (res.status === 200 && res.data.status === \"SUCCESS\") {\n                    console.log(\"inside success\")\n                    this.setState({\n                        allStocksList: res.data.data\n                    }, () => {\n                        console.log(\"all stock after set state\", this.state.allStocksList)\n                    });\n                } else {\n\n                }\n            })\n    }\n    handleConfirm(e){\n        e.preventDefault()\n        let stock={\n            stockId: this.state.stockId,\n            quantity: this.state.quantity\n        }\n        axios.post(`${url.url}/updatedPrice`,stock )\n                .then(res => {\n                    console.log(\"res inside handle confirm\", res)\n                    if (res.status === 200 && res.data.status === \"SUCCESS\") {\n                        console.log(\"inside success\")\n                        this.setState({\n                            updatedPrice: res.data.totalPrice,\n                            confirmed: true\n                        }, () => {\n                            console.log(\"updated price\", this.state.updatedPrice)\n                        });\n                    } else {\n    \n                    }\n                }).catch(err => {\n                    \n                })\n    }\n    handleOrderCancel(e){\n        e.preventDefault()\n        let userId=localStorage.getItem('userId')\n        let stock={\n            stockId: this.state.stockId,\n            quantity: this.state.quantity,\n            userId: userId,\n            price: this.state.updatedPrice,\n            status: \"CANCEL\",\n            unitPrice: this.state.unitPrice\n        }\n        axios.post(`${url.url}/order`,stock )\n                .then(res => {\n                    console.log(\"res inside handle confirm\", res)\n                    if (res.status === 200 && res.data.status === \"SUCCESS\") {\n                        console.log(\"inside success\")\n                        this.setState({\n                            orderId: res.data.orderId\n                        }, () => {\n                            console.log(\"orderid\", this.state.orderId)\n                        });\n                        alert(`Order submitted successfully. Order Id: ${this.state.orderId}`)\n                        this.props.history.push('/home')\n                    } else {\n    \n                    }\n                }).catch(err => {\n                    \n                })\n    }\n    handleOrder(e){\n        e.preventDefault()\n        let userId=localStorage.getItem('userId')\n        let stock={\n            stockId: this.state.stockId,\n            quantity: this.state.quantity,\n            userId: userId,\n            price: this.state.updatedPrice,\n            status: \"SUCCESS\",\n            unitPrice: this.state.unitPrice\n        }\n        axios.post(`${url.url}/order`,stock )\n                .then(res => {\n                    console.log(\"res inside handle confirm\", res)\n                    if (res.status === 200 && res.data.status === \"SUCCESS\") {\n                        console.log(\"inside success\")\n                        this.setState({\n                            orderId: res.data.orderId\n                        }, () => {\n                            console.log(\"orderid\", this.state.orderId)\n                        });\n                        alert(\"Order submission cancelled\")\n                        this.props.history.push('/home')\n                    } else {\n    \n                    }\n                }).catch(err => {\n                    \n                })\n\n    }\n    handleSubmit(e) {\n        e.preventDefault()\n        this.validate().then((res) => {\n            console.log(\"res\", res)\n            const { stockId, unitPrice, quantity } = this.state\n            let userId = localStorage.getItem('userId')\n            const stock = {\n                stockId: stockId,\n                quantity: parseInt(quantity),\n                unitPrice: unitPrice\n            };\n            console.log(\"validation response\", res)\n            if (res) {\n                this.getData(stock).then((response) => {\n                    console.log(\"response of purchase\", response)\n                    if (response.status === 200 && response.data.status === \"SUCCESS\") {\n                        console.log(\"response of purchase\", response)\n                        this.setState({\n                            totalPriceObtained: true,\n                            totalPrice: response.data.totalPrice\n                        })\n                    } else {\n                        alert(`Sorry we do not find any movies available on this date`);\n                    }\n                })\n            }\n        });\n\n    }\n \n    onStockChange(e) {\n        this.setState({\n            stockId: this.state.allStocksList[e.target.value - 1].stockId,\n            stockName: this.state.allStocksList[e.target.value - 1].stockName,\n            unitPrice: this.state.allStocksList[e.target.value - 1].unitPrice\n        }, () => {\n            console.log(\"After stock change\", this.state.stockId, this.state.stockName)\n        })\n\n    }\n    handleCancel(e) {\n        e.preventDefault();\n        this.setState(() => this.initialState)\n        document.getElementById(\"purchaseform\").reset();\n        console.log(\"state after reset\", this.state)\n    }\n    getData(stock) {\n        return new Promise((resolve, reject) => {\n            axios.post(`${url.url}/totalPrice`, stock)\n                .then(res => {\n                    resolve(res)\n                }).catch(err => {\n                    reject(err)\n                })\n        });\n    }\n    validate() {\n        return new Promise((resolve, reject) => {\n            console.log(\"Inside validate\")\n            let isValid = true;\n            const errors = {\n                quantityError: ''\n            }\n            var UserDate = this.state.date\n            var ToDate = new Date();\n\n            // if (this.state.date && new Date(UserDate).getTime() >= ToDate.getTime()) {\n            //     console.log(\"Date is valid\")\n            // } else {\n            //     isValid = false;\n            //     errors.dateError = \"Please select valid date either today or future date\"\n            // }\n            var pattern = new RegExp('^\\\\d*$');\n            if (pattern.test(this.state.quantity )) {\n\n            } else {\n                isValid=false;\n                errors.quantityError=\"Quantity should be a number greater than 0\"\n            }\n            if(this.state.stockName===''){\n                isValid=false;\n                errors.stockNameError=\"Please select a stock from the list and enter quantity\"\n            } \n            this.setState({\n                ...this.state,\n                ...errors\n            })\n            return resolve(true)\n        })\n\n    }\n    render() {\n\n        let stockList = this.state.allStocksList.map((item, i) => {\n            console.log(\"item\", item)\n            return (\n                <option key={i} value={item.stockId}>{item.stockName}</option>\n            )\n        }, this);\n        console.log(\"stock list inside render\", stockList)\n        return (\n            <div>\n                {/* <header >\n                    <h2> Buy Stocks</h2>\n                </header> */}\n                <form id=\"purchaseform\" className=\"purchaseform\">\n                    <div className=\"form-group\">\n                    <span className=\"pull-right text-danger \" ><small>{this.state.stockNameError}</small></span>\n                        <div className=\"form-group col-xs-3\">\n                            <label htmlFor=\"stockName\" style={{ \"font-weight\": \"bold\" }}>Select the stock</label>\n                            <select\n                                className=\"form-control\"\n                                id=\"stockName\"\n                                onChange={this.onStockChange}\n                            >\n                                <option>select</option>\n                                {stockList}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <span className=\"pull-right text-danger \" ><small>{this.state.quantityError}</small></span>\n                        <label htmlFor=\"quantity\" style={{ \"font-weight\": \"bold\" }}>Enter the quantity</label>\n                        <input\n                            type=\"quantity\"\n                            id=\"quantity\"\n                            onChange={this.handleChange}\n                            value={this.state.quantity}\n                            className=\"form-control\"\n                            placeholder=\"Enter the quantity\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"unitPrice\" style={{ \"font-weight\": \"bold\" }}>Unit Price for selected stock</label>\n                        <input\n                            type=\"unitPrice\"\n                            id=\"unitPrice\"\n                            value={this.state.unitPrice}\n                            className=\"form-control\"\n                            readOnly />\n\n                        <h7 >***Brokerage fee is 10%</h7>\n                    </div>\n                    <span>\n                        <button id=\"submitsearch\" type=\"submit\" className=\"but\" onClick={this.handleSubmit}>Buy</button>\n                    </span>\n                    <span>&nbsp;&nbsp;\n                <button id=\"submitcancel\" type=\"submit\" className=\"but\" onClick={this.handleCancel}>Cancel</button>\n                    </span>\n\n                </form>\n                <br></br>\n                {\n                    this.state.totalPriceObtained ?\n                        (<div>\n                            <span>\n                                <h5>Total Price in INR: {this.state.totalPrice}</h5>\n                                    <button id=\"submitconfirm\" type=\"submit\" className=\"but\" onClick={this.handleConfirm}>Confirm</button>\n                                    <button id=\"submitcancel\" type=\"submit\" className=\"but\" onClick={this.handleCancel}>Cancel</button>\n\n                            </span>\n                        </div>\n                        ) :\n                        (<div></div>)\n                }\n                <br></br>\n                {\n                    this.state.confirmed ?\n                        (<div>\n                            <span>\n                                <h5>Total Price in INR: {this.state.totalPrice} &nbsp; &nbsp; Updated Price in INR: {this.state.updatedPrice} </h5>\n                                <button id=\"submitorder\" type=\"submit\" className=\"butgreen\" onClick={this.handleOrder }>Confirm</button>\n                                <button id=\"submitcancel\" type=\"submit\" className=\"but\" onClick={this.handleOrderCancel}>Cancel</button>\n                            </span>\n                        </div>\n                        ) :\n                        (<div></div>)\n                }\n            </div>\n        )\n    }\n}\n\nexport default Purchase\n","import React, { Component } from 'react'\nimport url from '../../config.json'\nimport axios from 'axios'\nimport './ListStocks.css'\nexport class ListStocks extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            allStocksList:[]\n        }\n    }\n    componentDidMount() {\n        axios.get(`${url.url}/getAllStocks`)\n            .then(res => {\n                console.log(\"res inside component did mount get all stocks\", res)\n                if (res.status === 200 && res.data.status===\"SUCCESS\" ){   \n                    console.log(\"inside success\")\n                    this.setState({\n                        allStocksList: res.data.data\n                    },()=>{\n                        console.log(\"all stock after set state\", this.state.allStocksList)\n                    });\n                } else {\n        \n                }\n            })\n    }\n    render() {\n        return (\n            <div>\n                <h2>List Of Stocks</h2>\n                <table className=\"breachtable\">\n                            <thead className=\"tableheading\">\n                                <tr>\n                                    <th scope=\"col\">Stock Name</th>\n                                    <th scope=\"col\">Unit Price</th>\n                                    <th scope=\"col\">Stock Exchange</th>\n                                    <th scope=\"col\">CRISIL Rating</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.allStocksList.map((each, index) => (\n                                        <tr className=\"datarow\" scope=\"row\">\n                                            <td> {each.stockName}</td>\n                                            <td> {each.unitPrice}</td>\n                                            <td> NSE </td>\n                                            <td> {each.rating   }</td>\n                                        </tr>\n                                    ))\n                                }\n\n                            </tbody>\n                        </table>\n                \n            </div>\n        )\n    }\n}\n\nexport default ListStocks\n","import React, { Component } from 'react'\nimport url from '../../config.json'\nimport axios from 'axios'\nimport { BarChart, Bar, XAxis, YAxis, Cell, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './Trending.css'\nexport class Trending extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            allStocksList: [{\n                stockName: 'Reliance Industries Ltd',\n                crisilRating: 10\n            },\n            {\n                stockName: \"Bajaj Auto Ltd\",\n                crisilRating: 9\n            },\n            {\n                stockName: \"Dr.Reddy's Laboratories Ltd\",\n                crisilRating: 8\n            },\n            {\n                stockName: \"Bharat Heavy Electricals Ltd\",\n                crisilRating: 7\n            },\n            {\n                stockName: \"State Bank Of India\",\n                crisilRating: 6\n\n            }\n            ]\n        }\n    }\n    componentDidMount() {\n        axios.get(`${url.urlCharan}/getTrending`)\n            .then(res => {\n                console.log(\"res inside component did mount get all stocks\", res)\n                if (res.status === 200 && res.data.status === \"SUCCESS\") {\n                    console.log(\"inside success\")\n                    this.setState({\n                        allStocksList: res.data.data\n                    }, () => {\n                        console.log(\"all stock after set state\", this.state.allStocksList)\n                    });\n                } else {\n\n                }\n            })\n    }\n    render() {\n        return (\n            <div>\n                <h2>Trending Stocks</h2>\n                <table className=\"breachtable\">\n                    <thead className=\"tableheading\">\n                        <tr>\n                            <th scope=\"col\">Stock Name</th>\n                            <th scope=\"col\">CRISIL Rating</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.allStocksList.map((each, index) => (\n                                <tr className=\"datarow\" scope=\"row\">\n                                    <td> {each.stockName}</td>\n                                    <td> {each.crisilRating}</td>\n                                </tr>\n                            ))\n                        }\n\n                    </tbody>\n                </table>\n\n                <br></br>\n                <div className=\"chart\">\n                <BarChart width={600} height={300} data={this.state.allStocksList}\n                    margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n                    <XAxis dataKey=\"stockName\" />\n                    <YAxis dataKey=\"crisilRating\" />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"crisilRating\" stackId=\"a\" fill=\"#8884d8\" />\n                    {/* <Bar dataKey=\"crisilRating\" stackId=\"a\" fill=\"#ffffff\" /> */}\n                   \n                </BarChart>\n                </div>\n                \n\n            </div>\n\n        )\n    }\n}\n\nexport default Trending\n","import React, { Component } from 'react'\nimport url from '../../config.json'\nimport axios from 'axios'\nimport './StockHistory.css'\nexport class StockHistory extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            allStocksList:[]\n        }\n    }\n    componentDidMount() {\n        let userId=localStorage.getItem('userId')\n        axios.get(`${url.url}/myOrders/${userId}`)\n            .then(res => {\n                console.log(\"res inside component did mount get my orders\", res)\n                if (res.status === 200 && res.data.status===\"SUCCESS\" ){   \n                    console.log(\"inside success\")\n                    this.setState({\n                        allStocksList: res.data.data\n                    },()=>{\n                        console.log(\"all stock after set state\", this.state.allStocksList)\n                    });\n                } else {\n        \n                }\n            })\n    }\n    render() {\n        return (\n            <div>\n                <h2>List Of Stocks</h2>\n                <table className=\"breachtable\">\n                            <thead className=\"tableheading\">\n                                <tr>\n                                    <th scope=\"col\">Ordered Date</th>\n                                    <th scope=\"col\">Stock Name</th>\n                                    <th scope=\"col\">Unit Price</th>\n                                    <th scope=\"col\">Quantity</th>\n                                    <th scope=\"col\">Total Price</th>\n                                    <th scope=\"col\">Status</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.allStocksList.map((each, index) => (\n                                        <tr className=\"datarow\" scope=\"row\">\n                                            <td> {each.orderedDate}</td>\n                                            <td> {each.stockName}</td>\n                                            <td> {each.unitPrice}</td>\n                                            <td> {each.quantity}</td>\n                                            <td> {each.totalPrice}</td>\n                                            <td> {each.status}</td>\n                                            \n                                        </tr>\n                                    ))\n                                }\n\n                            </tbody>\n                        </table>\n                \n            </div>\n        )\n    }\n}\n\nexport default StockHistory\n","import React, { Component } from 'react'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\nimport Purchase from '../Purchase/Purchase';\nimport ListStocks from '../ListStocks/ListStocks';\nimport Trending from '../Trending/Trending';\nimport StockHistory from '../StockHistory/StockHistory';\n\nexport class Home extends Component {\n    render() {\n        return (\n            <div>\n                <Tabs >\n                    <TabList>\n                       \n                        <Tab>List Of Stocks</Tab>\n                        <Tab>Purchase Stocks</Tab>\n                        <Tab>My Stock History</Tab>\n                        <Tab>Trending Stocks</Tab>\n                    </TabList>\n\n                    <TabPanel>\n                         <ListStocks></ListStocks>\n                    </TabPanel>\n                    <TabPanel>\n                        <Purchase></Purchase>                        \n                    </TabPanel>\n                    <TabPanel>\n                        <StockHistory></StockHistory>\n                    </TabPanel>\n                    <TabPanel>\n                        <Trending></Trending>\n                    </TabPanel>\n                </Tabs>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport Header from './Components/Header/Header'\nimport './App.css';\nimport Login from './Components/Login/Login';\nimport Logout from './Components/Logout/Logout';\nimport Home from './Components/Home/Home';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // const { i18n } = this.props;\n    // i18n.changeLanguage('en');\n    this.state = {\n      isLoggedIn: false,\n      data: {}\n    }\n  }\n  redirect = (page, history) => {\n    history.push(page);\n  }\n\n  validateUser = (isLoggedIn) => {\n    this.setState({ isLoggedIn });\n  }\n  getuserData = (data, props) => {\n    this.setState({ data });\n    console.log(data);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <Header isLoggedIn={this.state.isLoggedIn} />\n          <Switch>\n            <Route path='/logout' component={()=><Logout validateUser={this.validateUser}/>}></Route>\n            <Route path='/'  exact component={()=><Login validateUser={this.validateUser} redirect={this.redirect}/>}></Route>\n            <Route path='/home' exact component={Home}></Route>\n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n\n}\n\n  export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}